// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	jwt "github.com/blackhorseya/user-app/internal/pkg/infra/jwt"
	mock "github.com/stretchr/testify/mock"

	user "github.com/blackhorseya/user-app/internal/pkg/entity/user"
)

// IJwt is an autogenerated mock type for the IJwt type
type IJwt struct {
	mock.Mock
}

// NewToken provides a mock function with given fields: info
func (_m *IJwt) NewToken(info *user.Profile) (string, error) {
	ret := _m.Called(info)

	var r0 string
	if rf, ok := ret.Get(0).(func(*user.Profile) string); ok {
		r0 = rf(info)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*user.Profile) error); ok {
		r1 = rf(info)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ValidateToken provides a mock function with given fields: signedToken
func (_m *IJwt) ValidateToken(signedToken string) (*jwt.TokenClaims, error) {
	ret := _m.Called(signedToken)

	var r0 *jwt.TokenClaims
	if rf, ok := ret.Get(0).(func(string) *jwt.TokenClaims); ok {
		r0 = rf(signedToken)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*jwt.TokenClaims)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(signedToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
