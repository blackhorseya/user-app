basePath: /api
definitions:
  er.APPError:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  pb.Profile:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      picture:
        type: string
      token:
        type: string
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
info:
  contact:
    email: blackhorseya@gmail.com
    name: Sean Zheng
    url: https://blog.seancheng.space
  description: User API
  license:
    name: GPL-3.0
    url: https://spdx.org/licenses/GPL-3.0-only.html
  title: User API
  version: 1.0.0
paths:
  /liveness:
    get:
      consumes:
      - application/json
      description: to know when to restart an application
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.APPError'
      summary: Liveness
      tags:
      - Health
  /readiness:
    get:
      consumes:
      - application/json
      description: Show application was ready to start accepting traffic
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.APPError'
      summary: Readiness
      tags:
      - Health
  /v1/auth/callback:
    get:
      consumes:
      - application/json
      description: Callback after login
      produces:
      - application/json
      responses:
        "307":
          description: Temporary Redirect
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.APPError'
      summary: Callback after login
      tags:
      - Auth
  /v1/auth/login:
    get:
      consumes:
      - application/json
      description: Get login url
      parameters:
      - description: redirect url after login success
        in: query
        name: redirect
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.APPError'
      summary: Get login url
      tags:
      - Auth
  /v1/auth/me:
    get:
      consumes:
      - application/json
      description: Get me information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/pb.Profile'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/er.APPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/er.APPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/er.APPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.APPError'
      security:
      - Bearer: []
      summary: Get me information
      tags:
      - Auth
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
